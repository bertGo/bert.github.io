I"t<h3 id="c">C</h3>

<ul>
  <li>
    <p>int *ptr[3] :是这个数组地址先偏移三个量的值，是 指针指向的值</p>
  </li>
  <li>
    <p>int (*ptr)[3]：是指针本身的地址，先偏移三个量，然后对应的值是指针所指的值</p>
  </li>
  <li>
    <p>c语言中，一个整型是32位，在我们内存当中，一个位是有8个字节 ，所以一个整型占4个位</p>

    <ul>
      <li>
        <p>int a=10;</p>

        <p>int * p1;
p1=&amp;a;*</p>

        <p>p1表示这个a的地址，* p1表示这个a的值，第二次没有加 * 是因为已经声明过了，除了声明之外的地方*p 意义为：取p这个指针变量所指向的地址中的值；</p>
      </li>
    </ul>
  </li>
  <li>
    <p>字符变量中，一个字符占四个字节，相当于一个位</p>
  </li>
  <li>
    <p>char *str2=”world”;   fprintf(stdout,”the str2 value is %s\n”,str2); 这里str2应该是一个地址，为什么不输入 * str2	?  ：<code class="highlighter-rouge">str2中存储的是地址没错，但str2其本身是指针，所以输出str2是输出指针中存放的地址所指向的值，指针本身的特性。视频中一直展示的*str2才能访问地址所存值、str2访问的是地址是在调试环境下的情况，并不是程序本身运行效果，不要被迷惑了 </code></p>
  </li>
</ul>

<h3 id="gdb">GDB</h3>

<ul>
  <li>如果在一个地址前加一个*就表示到这个地址去取里面的值，如果再在其之上 加个括号的话，就表示这个地址指向的不是一个栈，表示指向的是一个代码段整体</li>
  <li>任何 一个指针(函数或者变量或者静态全局)，如果是仅仅写这个变量名称本身的话，他指的是变量所在的地址，如果是希望找到地址里面的东西的话，需要在前面加一个*</li>
  <li>x/ 可以用来打印地址对应的值 x/ 0x7fffffffe55c
    <ul>
      <li>x/ 6cb : 	6是打印6个字符，c 是按照字符格式显示变量 ； b  （byte） 表示用单字节来打印
        <ul>
          <li>b:1byte;	h: 2 byte;	w:4 byte;	g:8byte;</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

:ET